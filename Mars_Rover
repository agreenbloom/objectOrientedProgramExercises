class Rover
  attr_accessor :x, :y, :direction

  WIDTH = 10
  LENGTH = 10
  COMPASS = ['N', 'E', 'S', 'W']

  def initialize(x, y, direction)
    @x = x
    @y = y
    @direction = direction
  end

  def move
    case @direction
    when "N"
      @y += 1
    when "S"
      @y -= 1
    when "E"
      @y += 1
    when "W"
      @y -= 1
    end
  end

  def turn(n = 1)
    pos = COMPASS.index(@direction)
    @direction = COMPASS.rotate(n)[pos]
  end

  def turn_right
    COMPASS.rotate(1)
  end

  def turn_left
    COMPASS.rotate(-1)
  end

  def read_instruction(i)
    case i
    when "M"
      move
    when "L"
      turn_left
    when "R"
      turn_right
    end

    puts self
  end

  def to_s
    "<Rover: #{x}, #{y} facing #{direction}>"
  end

  def collides?(other)
    x == other.x and y == other.y
  end

end


rovers = [Rover.new(1, 1, "N"), Rover.new(5, 1, "E")]

rovers.each do |r|
  input = "LMM"


  input.each_char do |c|
    r.read_instruction(c)
  end
end

